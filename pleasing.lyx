#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{fullpage}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\branch more
\selected 0
\filename_suffix 0
\color #faf0e6
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
High level description of the problem
\end_layout

\begin_layout Description
Input Any 
\begin_inset Formula $N\times M$
\end_inset

 matrix with positive entries, which we shall denote 
\begin_inset Formula $A$
\end_inset


\end_layout

\begin_layout Description
Output Permutations 
\begin_inset Formula $\sigma,\pi$
\end_inset

 so that the 
\begin_inset Formula $N\times M$
\end_inset

 matrix 
\begin_inset Formula $B$
\end_inset

 defined by 
\begin_inset Formula $B_{ij}=A_{\sigma(i),\pi(j)}$
\end_inset

 appears pleasing to me.
\end_layout

\begin_layout Section
Algorithm
\end_layout

\begin_layout Standard
First we'll make some notation, then we'll write down the algorithm.
\end_layout

\begin_layout Subsection
\begin_inset Quotes eld
\end_inset

Partition loss
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
We will make our pleasing permutations by iteratively forming larger and
 larger partitions of the indices.
 Let us take a moment to make some notation:
\end_layout

\begin_layout Definition
An 
\series bold
ordered set 
\series default

\begin_inset Formula $\left(a_{1},a_{2}\cdots a_{m}\right)$
\end_inset

 is a list of objects with no duplicates.
 If 
\begin_inset Formula $A,B$
\end_inset

 are ordered sets, we take the notation that 
\begin_inset Formula $A\cup B$
\end_inset

 is what happens if you stick 
\begin_inset Formula $B$
\end_inset

 on the end of the list 
\begin_inset Formula $A$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Consider a collection of ordered sets, 
\begin_inset Formula $G=\left(G_{1}\cdots G_{n}\right)$
\end_inset

.
 That is, each 
\begin_inset Formula $G_{k}$
\end_inset

 is itself an ordered set.
 We say that this collection is a 
\series bold
partition of a set 
\series default

\begin_inset Formula $S$
\end_inset

 if the collection is disjoint and 
\begin_inset Formula $\bigcup_{k=1}^{n}G_{k}=S$
\end_inset

.
 
\end_layout

\begin_layout Standard
Now, let us consider a partition that applies over both 
\emph on
rows and columns simultaneously.
 
\emph default
One can think of this as a kind of matching between groups of rows and groups
 of columns.
 In particular, let
\end_layout

\begin_layout Itemize
\begin_inset Formula $R=\left(R_{1}\cdots R_{n}\right)$
\end_inset

 denote a partitition of 
\begin_inset Formula $\left\{ 1\cdots N\right\} $
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $C=\left(C_{1}\cdots G_{n}\right)$
\end_inset

 denote a partition of 
\begin_inset Formula $\left\{ 1\cdots M\right\} $
\end_inset


\end_layout

\begin_layout Standard
So each 
\begin_inset Formula $R_{k}$
\end_inset

 denotes a set of rows and each 
\begin_inset Formula $C_{k}$
\end_inset

 denotes a set of columns.
\end_layout

\begin_layout Standard
For any given matrix 
\begin_inset Formula $A$
\end_inset

, we shall say the 
\begin_inset Quotes eld
\end_inset

loss
\begin_inset Quotes erd
\end_inset

 of this matrix with respect to these partitions is defined as 
\begin_inset Formula 
\[
L(A,R,C)=\sum\log\frac{\sum_{i\in R_{i}\text{ or }j\in C_{k}}A_{i,j}}{\sum_{i\in R_{k}\text{ and }j\in C_{k}}A_{i,j}}
\]

\end_inset

If this loss is small, what does it mean? Let's look at the terms in plain
 english:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\sum_{i\in R_{i}\text{ or }j\in C_{k}}A_{i,j}$
\end_inset

 – all the mass that lies in entries which are 
\series bold
either 
\series default
in the rows indicates by either
\series bold
 
\series default
the set 
\begin_inset Formula $R_{k}$
\end_inset

 or the columns indicated by the set 
\begin_inset Formula $C_{k}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\sum_{i\in R_{i}\text{ and }j\in C_{k}}A_{i,j}$
\end_inset

 – all of the mass that lies in the entries that are in the submatrix formed
 by looking 
\series bold
only
\series default
 at the rows 
\begin_inset Formula $R_{k}$
\end_inset

 and the columns 
\begin_inset Formula $C_{k}$
\end_inset


\end_layout

\begin_layout Standard
If the loss is small, it means that 
\emph on
most of the mass 
\emph default
of the matrix lies inside smaller submatrices.
 Our basic approach will be to find a series of partitionings, at coarser
 and coarser levels of granularity, so that at each level of granularity
 the loss is as small as possible.
\end_layout

\begin_layout Subsection
Algorithm
\end_layout

\begin_layout Enumerate
Use the Hungarian algorithm to find a best-possible bipartite matching between
 the rows and columns.
 That is, a collection
\begin_inset Formula 
\[
\left\{ r_{k},c_{k}\right\} _{k\in1\cdots N\wedge M}
\]

\end_inset

that maximizes 
\begin_inset Formula $\sum_{k}A_{r_{k},c_{k}}$
\end_inset

.
 We will use this matching to seed our partitions.
 Let 
\begin_inset Formula $R,C$
\end_inset

 be defined by 
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $R_{k}=\left(r_{k}\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $C_{k}=\left(c_{k}\right)$
\end_inset


\end_layout

\begin_layout Standard
Notice that 
\begin_inset Formula $R$
\end_inset

 may not be a partition of 
\begin_inset Formula $\left\{ 1\cdots N\right\} $
\end_inset

 and 
\begin_inset Formula $C$
\end_inset

 may not be a partition of 
\begin_inset Formula $\left\{ 1\cdots M\right\} $
\end_inset

.
 This will give us two collections of disjoint sets.
\end_layout

\end_deeper
\begin_layout Enumerate
Get rid of any zero groups.
 If 
\begin_inset Formula $A_{r_{k},c_{k}}=0$
\end_inset

 then we don't really want group 
\begin_inset Formula $k$
\end_inset

.
 So let 
\begin_inset Formula $S=\left\{ k:\ A_{r_{k},c_{k}}=0\right\} $
\end_inset

 and 
\begin_inset Formula $R\gets\left\{ R_{k}\right\} _{k\in S}$
\end_inset

 and 
\begin_inset Formula $R\gets\left\{ C_{k}\right\} _{k\in S}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Add in any rows or columns who are now left out of the matching.
 Rows and columns can be left out because of the 
\begin_inset Quotes eld
\end_inset

getting rid of zero groups
\begin_inset Quotes erd
\end_inset

 thing as well as the fact that if 
\begin_inset Formula $N\neq M$
\end_inset

 not everybody can get matched.
 We will add these rows and columns in such that the loss stays smallish.
\end_layout

\begin_deeper
\begin_layout Enumerate
For each 
\begin_inset Formula $r$
\end_inset

 such that 
\begin_inset Formula $r\notin\cup_{k}R$
\end_inset

,
\end_layout

\begin_deeper
\begin_layout Enumerate
For each 
\begin_inset Formula $k'$
\end_inset

, let 
\begin_inset Formula $\tilde{R}^{(k')}$
\end_inset

 be defined by taking 
\begin_inset Formula $R$
\end_inset

 and adding 
\begin_inset Formula $r$
\end_inset

 to the 
\begin_inset Formula $k$
\end_inset

th partition:
\begin_inset Formula 
\[
\tilde{R}_{k}^{(k')}=\begin{cases}
R_{k}\cup\left(r\right) & \text{if }k=k'\\
R_{k} & \text{else}
\end{cases}
\]

\end_inset

and
\begin_inset Formula 
\[
L^{(k')}=L(A,\tilde{R},C)
\]

\end_inset


\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $k^{*}\gets\arg\min_{k}L^{(k')}$
\end_inset


\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $R\gets\tilde{R}^{(k^{*})}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
For each 
\begin_inset Formula $c$
\end_inset

 such that 
\begin_inset Formula $c\notin\cup_{k}C$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
For each 
\begin_inset Formula $k'$
\end_inset

, let 
\begin_inset Formula $\tilde{C}^{(k')}$
\end_inset

 be defined by taking 
\begin_inset Formula $C$
\end_inset

 and adding 
\begin_inset Formula $c$
\end_inset

 to the 
\begin_inset Formula $k$
\end_inset

th partition
\begin_inset Formula 
\[
\tilde{C}_{k}^{(k')}=\begin{cases}
C_{k}\cup\left(c\right) & \text{if }k=k'\\
C_{k} & \text{else}
\end{cases}
\]

\end_inset

and
\begin_inset Formula 
\[
L^{(k')}=L(A,R,\tilde{C})
\]

\end_inset


\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $k^{*}\gets\arg\min_{k}L^{(k')}$
\end_inset


\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $C\gets\tilde{C}^{(k^{*})}$
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
Repeatedly merge partitions until everything is in one big partition.
 When we merge we keep the order within each partition, so at the end we
 will have an order that respects all the granularities of partitioning
 that we have considered.
 Here's how it goes:
\end_layout

\begin_deeper
\begin_layout Enumerate
For each 
\begin_inset Formula $k_{1},k_{2}$
\end_inset

, let 
\begin_inset Formula $\tilde{R}^{(k_{1},k_{2})},\tilde{C}^{(k_{1},k_{2})}$
\end_inset

 be defined by taking the partitions 
\begin_inset Formula $R,C$
\end_inset

 and merging the 
\begin_inset Formula $k_{1}$
\end_inset

 set with the 
\begin_inset Formula $k_{2}$
\end_inset

 set.
 That is,
\begin_inset Formula 
\begin{align*}
A & =R_{k_{1}}\cup R_{k_{2}}\\
B & =C_{k_{1}}\cup C_{k_{2}}\\
\tilde{R}^{(k_{1},k_{2})} & =\left\{ R\right\} _{k\notin\left\{ k_{1},k_{2}\right\} }\cup A\\
\tilde{C}^{(k_{1},k_{2})} & =\left\{ C\right\} _{k\notin\left\{ k_{1},k_{2}\right\} }\cup B
\end{align*}

\end_inset

and 
\begin_inset Formula $L^{(k_{1},k_{2})}=L(A,\tilde{R}^{(k_{1},k_{2})},\tilde{C}^{(k_{1},k_{2})})$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $k_{1}^{*},k_{2}^{*}\gets\arg\min_{k_{1},k_{2}}L^{(k_{1},k_{2})}$
\end_inset

.
 
\end_layout

\begin_layout Enumerate
Let 
\begin_inset Formula $C\gets\tilde{C}^{(k_{1},k_{2})}$
\end_inset

 and 
\begin_inset Formula $R\gets\tilde{R}^{(k_{1},k_{2})}$
\end_inset


\end_layout

\begin_layout Standard
We just repeat that process until we're left with 
\begin_inset Formula $R=\left(R_{1}\right)$
\end_inset

 and 
\begin_inset Formula $C=\left(C_{1}\right)$
\end_inset

.
 The order within 
\begin_inset Formula $R_{1}$
\end_inset

 and 
\begin_inset Formula $C_{1}$
\end_inset

 is fairly pleasing.
\end_layout

\end_deeper
\end_body
\end_document
